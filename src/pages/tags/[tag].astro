---
import { Icon } from "astro-icon/components"
import FlatPanel from "../../components/FlatPanel.astro"
import Layout from "../../layouts/Layout.astro"
import { type CollectionEntry, getCollection } from "astro:content"
import Anchor from "../../components/Anchor.astro"
import Card from "../../components/Card/Card.astro"

export interface Props {
    posts: CollectionEntry<"blog">[]
    tagData: CollectionEntry<"tags">
}

export async function getStaticPaths() {
    const tags = await getCollection("tags")
    const blogPosts = await getCollection("blog")
    return tags.map((tag) => ({
        params: { tag: tag.slug },
        props: { posts: blogPosts, tagData: tag },
    }))
}

const { tag } = Astro.params
const { posts, tagData } = Astro.props

const filteredPosts = posts.filter((post) =>
    post.data.tags.find((t) => t.slug == tag)
)
const postsCount = filteredPosts.length
---

<Layout title={tag as string}>
    <main class="ccontainer">
        <FlatPanel>
            <div class="flex items-center gap-3">
                <Icon
                    name={tagData.data.icon ?? "tag"}
                    class="flex-shrink-0 w-7 h-7 max-sm:hidden"
                />
                <h1
                    class="text-offwhite font-nasa text-xl sm:text-3xl uppercase break-words overflow-hidden"
                >
                    {tagData.data.label}
                </h1>
                <div class="border-t-2 border-offwhite flex-grow h-1/2"></div>
            </div>
            <div class="flex justify-between flex-col sm:flex-row gap-1">
                <p class="text-offwhite">
                    {postsCount} posts tagged with {tagData.data.label}
                </p>
                <Anchor href="/tags">See all tags</Anchor>
            </div>
            <ul role="list" class="grid grid-cols-1 sm:grid-cols-2 gap-8 mt-8">
                {filteredPosts.map((post) => <Card post={post} />)}
            </ul>
        </FlatPanel>
    </main>
</Layout>
